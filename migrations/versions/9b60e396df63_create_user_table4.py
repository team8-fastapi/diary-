"""create admin table4

Revision ID: 9b60e396df63
Revises: 188c77f79f89
Create Date: 2025-06-09 19:43:44.988159

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "9b60e396df63"
down_revision: Union[str, None] = "188c77f79f89"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tags",
        sa.Column("tags_id", sa.Integer(), nullable=False),
        sa.Column("tags_name", sa.String(length=60), nullable=False),
        sa.PrimaryKeyConstraint("tags_id"),
    )
    op.create_table(
        "users",
        sa.Column("user_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("email", sa.String(length=100), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("name", sa.String(length=20), nullable=False),
        sa.Column("phone_number", sa.String(length=15), nullable=True),
        sa.Column("last_login", sa.DateTime(), nullable=True),
        sa.Column("is_staff", sa.Boolean(), nullable=True),
        sa.Column("is_admin", sa.Boolean(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("user_id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "diary",
        sa.Column("diary_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("emotion_summary", sa.Text(), nullable=True),
        sa.Column(
            "mood",
            sa.Enum("기쁨", "슬픔", "분노", "피곤", "짜증", "무난", name="mood_enum"),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("diary_id"),
    )
    op.create_table(
        "diary_tags",
        sa.Column("diary_tag_id", sa.Integer(), nullable=False),
        sa.Column("diary_id", sa.Integer(), nullable=True),
        sa.Column("tags_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["diary_id"],
            ["diary.diary_id"],
        ),
        sa.ForeignKeyConstraint(
            ["tags_id"],
            ["tags.tags_id"],
        ),
        sa.PrimaryKeyConstraint("diary_tag_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("diary_tags")
    op.drop_table("diary")
    op.drop_table("users")
    op.drop_table("tags")
    # ### end Alembic commands ###
